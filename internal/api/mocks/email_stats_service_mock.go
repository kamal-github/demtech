// Code generated by MockGen. DO NOT EDIT.
// Source: internal/api/emailstatshandler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/kamal-github/demtech/internal/model"
)

// MockEmailStatsService is a mock of EmailStatsService interface.
type MockEmailStatsService struct {
	ctrl     *gomock.Controller
	recorder *MockEmailStatsServiceMockRecorder
}

// MockEmailStatsServiceMockRecorder is the mock recorder for MockEmailStatsService.
type MockEmailStatsServiceMockRecorder struct {
	mock *MockEmailStatsService
}

// NewMockEmailStatsService creates a new mock instance.
func NewMockEmailStatsService(ctrl *gomock.Controller) *MockEmailStatsService {
	mock := &MockEmailStatsService{ctrl: ctrl}
	mock.recorder = &MockEmailStatsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmailStatsService) EXPECT() *MockEmailStatsServiceMockRecorder {
	return m.recorder
}

// GetEmailStats mocks base method.
func (m *MockEmailStatsService) GetEmailStats(arg0 context.Context) (model.EmailStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmailStats", arg0)
	ret0, _ := ret[0].(model.EmailStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmailStats indicates an expected call of GetEmailStats.
func (mr *MockEmailStatsServiceMockRecorder) GetEmailStats(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmailStats", reflect.TypeOf((*MockEmailStatsService)(nil).GetEmailStats), arg0)
}
