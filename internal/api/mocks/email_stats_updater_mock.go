// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/emailstatsservice.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)


// MockEmailsStatsUpdater is a mock of EmailsStatsUpdater interface.
type MockEmailsStatsUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockEmailsStatsUpdaterMockRecorder
}

// MockEmailsStatsUpdaterMockRecorder is the mock recorder for MockEmailsStatsUpdater.
type MockEmailsStatsUpdaterMockRecorder struct {
	mock *MockEmailsStatsUpdater
}

// NewMockEmailsStatsUpdater creates a new mock instance.
func NewMockEmailsStatsUpdater(ctrl *gomock.Controller) *MockEmailsStatsUpdater {
	mock := &MockEmailsStatsUpdater{ctrl: ctrl}
	mock.recorder = &MockEmailsStatsUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmailsStatsUpdater) EXPECT() *MockEmailsStatsUpdaterMockRecorder {
	return m.recorder
}

// IncrementError mocks base method.
func (m *MockEmailsStatsUpdater) IncrementError(ctx context.Context, errorType string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrementError", ctx, errorType)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrementError indicates an expected call of IncrementError.
func (mr *MockEmailsStatsUpdaterMockRecorder) IncrementError(ctx, errorType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementError", reflect.TypeOf((*MockEmailsStatsUpdater)(nil).IncrementError), ctx, errorType)
}

// IncrementSuccess mocks base method.
func (m *MockEmailsStatsUpdater) IncrementSuccess(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrementSuccess", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrementSuccess indicates an expected call of IncrementSuccess.
func (mr *MockEmailsStatsUpdaterMockRecorder) IncrementSuccess(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementSuccess", reflect.TypeOf((*MockEmailsStatsUpdater)(nil).IncrementSuccess), ctx)
}

